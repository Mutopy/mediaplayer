<?php
/**
 * Created by PhpStorm.
 * User: erolland2018
 * Date: 26/11/2018
 * Time: 15:25
 */

namespace App\Admin;

use App\Entity\Genre;
use App\Entity\Media;
use App\Entity\Utilisateur;
use Sonata\AdminBundle\Admin\AbstractAdmin;
use Sonata\AdminBundle\Datagrid\DatagridMapper;
use Sonata\AdminBundle\Datagrid\ListMapper;
use Sonata\AdminBundle\Form\FormMapper;
use Sonata\AdminBundle\Form\Type\ModelType;
use Symfony\Component\Form\Extension\Core\Type\DateTimeType;
use Symfony\Component\Form\Extension\Core\Type\FileType;
use Symfony\Component\Form\Extension\Core\Type\TextType;

class MediaAdmin extends AbstractAdmin
{
    protected $baseRoutePattern = 'admin_media';

    protected function configureFormFields(FormMapper $formMapper)
    {
        $formMapper->with('MÃ©dia', ['class' => 'col-md-9'])
                        ->add('file', FileType::class)
                        ->add('image',FileType::class)
                        ->add('description', TextType::class,['required' => false])
                        ->add('dateCreated', DateTimeType::class)

                    ->end()
                    ->with(' ', ['class' => 'col-md-3'])
                        ->add('genre', ModelType::class, [
                            'class' => Genre::class,
                            'property' => 'name',
                             ])
                        ->add('utilisateur',ModelType::class, [
                            'class' => Utilisateur::class,
                            'property' => 'username',])
                    ->end()
        ;
    }

    protected function configureDatagridFilters(DatagridMapper $datagridMapper)
    {
        $datagridMapper->add('name')
                        ->add('description')
                        ->add('dateCreated')
                        ->add('genre.name')
        ;
    }

    protected function configureListFields(ListMapper $listMapper)
    {
        $listMapper->addIdentifier('name')
                    ->add('description')
                    ->add('dateCreated')
                    ->add('picture')
                    ->add('extension')
                    ->add('image',FileType::class)
                    ->add('utilisateur.username')
                    ->add('genre.name')
                    ->add('_action', null, [
                        'actions' => [
                        'edit' => [],
                        'delete' => [],
                ]
            ]);
    }

    public function prePersist($object)
    {
        parent::prePersist($object); // TODO: Change the autogenerated stub
    }

    public function preUpdate($user)
    {
        $this->getUserManager()->updatePassword($user);
    }

    public function setUserManager(UserManagerInterface $userManager)
    {
        $this->userManager = $userManager;
    }

    /**
     * @return UserManagerInterface
     */
    public function getUserManager()
    {
        return $this->userManager;
    }

    public function toString($object)
    {
        return $object instanceof Media
            ? $object->getName()
            : 'Media'; // shown in the breadcrumb on the create view
    }


}